matrix:
  include:
  - os: linux
    dist: xenial
    language: csharp
    dotnet: 2.2.203
    mono: none
    services: [docker]
    addons:
      apt:
        packages:
        - libxml2-utils
        - powershell
        sources:
        - sourceline: deb [arch=amd64] https://packages.microsoft.com/ubuntu/16.04/prod xenial main
          key_url: https://packages.microsoft.com/keys/microsoft.asc
    cache:
      directories:
      - $HOME/.nuget/packages
      - $HOME/.local/share/NuGet/v3-cache
  - os: osx
    osx_image: xcode10.1
    language: csharp
    dotnet: 2.2.203
    mono: none
    cache:
      directories:
      - $HOME/Library/Caches/Homebrew
      - $HOME/.nuget/packages
      - $HOME/.local/share/NuGet/v3-cache
  - os: windows
    language: shell
    cache:
      directories:
      - $HOME/.nuget/packages
      - $HOME/AppData/Local/NuGet/v3-cache
      - $HOME/.ChocoCache
    filter_secrets: false  # https://travis-ci.community/t/current-known-issues-please-read-this-before-posting-a-new-topic/264/10

solution: Libplanet.sln
install:
- |
  set -ev
  if [[ "$TRAVIS_OS_NAME" = "windows" ]]; then
    choco config set cacheLocation "$(cygpath -w "$HOME/.ChocoCache")"

    # .NET Core SDK 2.2+
    choco install dotnetcore-sdk
    dotnet --info

    # Tools for test coverage (dotcover-clt, codecov-exe)
    if [[ "$CODECOV_TOKEN" != "" ]]; then
      mkdir /tmp/dotcover
      pushd /tmp
      wget \
        https://download.jetbrains.com/resharper/ReSharperUltimate.2018.3.4/JetBrains.dotCover.CommandLineTools.2018.3.4.zip
      pushd dotcover
      7z x ../JetBrains.dotCover.CommandLineTools.*.zip
      popd
      mv dotcover/* /c/Windows/
      rm JetBrains.dotCover.CommandLineTools.*.zip
      popd

      choco install codecov
    fi
  fi
  set +ev

# Restore NuGet packages (dependencies)
- |
  for i in 1 2 3; do
    # Retry up to 3 times
    dotnet restore -s https://api.nuget.org/v3/index.json && break
  done

script:
# Fail fast if anything in below commands fails
- set -e

# Check coding styles
- hooks/check-bom

# Build the whole solution
- dotnet build -c Release

# Run unit tests (without TURN server)
- dotnet test -c Release -v n --filter "RequireTurnServer!=true"
# FIXME: For unknown reason, on Travis CI tests depending on TURN_SERVER_URL
#        seems not terminated or to take too long time.  We should diagnose
#        this and make the CI to run these tests too.

# Run unit tests with coverage report
- |
  if [[ "$TRAVIS_OS_NAME" = "windows" && "$CODECOV_TOKEN" != "" ]]; then
    dotnet build -c Debug
    dotnet build-server shutdown
    solution_abspath="$(cygpath -w "$(pwd)"/Libplanet.sln)"
    dotCover_config="$(cat .travis.dotCover.xml)"
    echo "${dotCover_config//\$SOLUTION/$solution_abspath}" \
      > dotCover.xml
    travis_wait 60 dotCover.exe cover dotCover.xml /p:UseSharedCompilation=false
    # Upload report to Codecov.io
    codecov.exe -f Libplanet.cov.xml -t "$CODECOV_TOKEN"
  fi

# Turn off "set -e" option
- set +e

before_cache:
- |
  if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then
    brew cleanup
  fi
